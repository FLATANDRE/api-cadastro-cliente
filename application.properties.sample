# AICare DI - Artificial Intelligence Care (Dynamic Inventory)
# Todos os direitos reservados.

#server
server.port=8080

#debug
debug=true

#logging
#TRACE, DEBUG, INFO, WARN, ERROR, FATAL ou OFF
logging.level.root=ERROR
logging.file: ${java.io.tmpdir}/spring/aicare.di.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

#api
server.servlet.context-path=/api

#seguran√ßa do token jwt
jwt.secret = secretkey

#google maps
google.maps.api.key = 

#conex\u00e3o
javax.persistence.create-database-schemas=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/aicare
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.default_schema=di	

#define como o hibernate ir\u00e1 se comportar quanto a cria\u00e7\u00e3o do esquema
#create: Apaga e recria todo o esquema [USAR APENAS EM DESENVOLVIMENTO]
#update: Atualiza o mapeamento
spring.jpa.hibernate.ddl-auto=update

#define se ir\u00e1 executar o 'data.sql'
#always: Sempre ir\u00e1 executar o data.sql [USAR APENAS EM DESENVOLVIMENTO]
#never: Nunca ir\u00e1 executar o data.sql
spring.datasource.initialization-mode=never

#codifica\u00e7\u00e3o do data.sql
spring.datasource.sqlScriptEncoding=UTF-8
